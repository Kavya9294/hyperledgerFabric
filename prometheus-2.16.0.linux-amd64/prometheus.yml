# # my global config
# global:
#   scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
#   evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
#   # scrape_timeout is set to the global default (10s).

# # Alertmanager configuration
# alerting:
#   alertmanagers:
#   - static_configs:
#     - targets:
#       # - alertmanager:9093

# # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
#   # - "first_rules.yml"
#   # - "second_rules.yml"

# # A scrape configuration containing exactly one endpoint to scrape:
# # Here it's Prometheus itself.
# scrape_configs:
#   # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
#   - job_name: 'prometheus'

#     # metrics_path defaults to '/metrics'
#     # scheme defaults to 'http'.

#     static_configs:
#     - targets: ['localhost:9090']

global:
  scrape_interval: 15s
  evaluation_interval: 15s
scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 10s
    static_configs:
    - targets: ['localhost:9090']
  - job_name: 'hyperledger_metrics'
    scrape_interval: 10s
    static_configs:
      - targets: ['peer0.org1.example.com:9443', 'peer1.org1.example.com:9443', 'peer0.org2.example.com:9443', 'peer1.org2.example.com:9443', 'orderer.example.com:8443', 'orderer2.example.com:8443', 'orderer3.example.com:8443', 'orderer4.example.com:8443', 'orderer5.example.com:8443']
